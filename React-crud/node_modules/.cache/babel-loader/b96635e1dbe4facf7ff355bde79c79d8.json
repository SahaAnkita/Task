{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Desktop/crud-app/src/utils/Base64Image.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Base64Image = () => {\n  _s();\n\n  const [newEmployee, setNewEmployee] = useState({\n    image: \"\"\n  });\n\n  const onImageChange = async e => {\n    setNewEmployee({ ...newEmployee,\n      image: await convertBase64(e.target.files[0])\n    });\n  };\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      name: \"image\",\n      id: \"file\",\n      onChange: e => onImageChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Base64Image, \"O4PNmiVBoypQzY4xbhNhJ94QJww=\");\n\n_c = Base64Image;\nexport default Base64Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Base64Image\");","map":{"version":3,"sources":["/home/ankita/Desktop/crud-app/src/utils/Base64Image.jsx"],"names":["useState","Base64Image","newEmployee","setNewEmployee","image","onImageChange","e","convertBase64","target","files","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9C;;AAEA,QAAMC,aAAa,GAAG,MAAMC,CAAN,IAAW;AAE7BH,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkBE,MAAAA,KAAK,EAAE,MAAMG,aAAa,CAACD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD;AAA5C,KAAD,CAAd;AAEH,GAJD;;AAMA,QAAMF,aAAa,GAAIG,IAAD,IAAU;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,MAAAA,UAAU,CAACE,aAAX,CAAyBN,IAAzB;;AACAI,MAAAA,UAAU,CAACG,MAAX,GAAoB,MAAM;AACtBL,QAAAA,OAAO,CAACE,UAAU,CAACI,MAAZ,CAAP;AACH,OAFD;;AAGAJ,MAAAA,UAAU,CAACK,OAAX,GAAsBC,KAAD,IAAW;AAC5BP,QAAAA,MAAM,CAACO,KAAD,CAAN;AACH,OAFD;AAGH,KATM,CAAP;AAUH,GAXD;;AAaA,sBACI;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,IAAI,EAAC,OAAjC;AAAyC,MAAA,EAAE,EAAC,MAA5C;AAAmD,MAAA,QAAQ,EAAEd,CAAC,IAAID,aAAa,CAACC,CAAD;AAA/E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3BD;;GAAML,W;;KAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\n\nconst Base64Image = () => {\n    const [newEmployee, setNewEmployee] = useState({ image: \"\" });\n\n    const onImageChange = async e => {\n   \n        setNewEmployee({ ...newEmployee, image: await convertBase64(e.target.files[0]) })\n\n    }\n\n    const convertBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file)\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            }\n            fileReader.onerror = (error) => {\n                reject(error);\n            }\n        })\n    }\n\n    return (\n        <div>\n            <input type=\"file\" multiple name=\"image\" id=\"file\" onChange={e => onImageChange(e)} />\n        </div>\n    )\n}\nexport default Base64Image;\n"]},"metadata":{},"sourceType":"module"}