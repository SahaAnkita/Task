{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Desktop/crud-app/src/Components/EditForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button } from \"react-bootstrap\";\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = ({\n  theEmployee\n}) => {\n  _s();\n\n  const id = theEmployee.id;\n  const [user, setUser] = useState({\n    name: \"\",\n    age: \"\",\n    address: \"\",\n    gender: \"\",\n    about: \"\",\n    image: \"\"\n  });\n  const {\n    name,\n    age,\n    address,\n    gender,\n    about,\n    image\n  } = user;\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const {\n    updateEmployee\n  } = useContext(EmployeeContext);\n  const updatedEmployee = {\n    id,\n    name,\n    age,\n    address,\n    gender,\n    about\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateEmployee(id, updatedEmployee);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Name *\",\n        name: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Age *\",\n        name: \"age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Address *\",\n        name: \"address\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Gender *\",\n        name: \"gender\",\n        value: gender,\n        onChange: e => setGender(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"About *\",\n        name: \"about\",\n        value: about,\n        onChange: e => setAbout(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      children: \"Edit Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"frOCNBXnUSP2zOT6bN/elMyTFQQ=\");\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/home/ankita/Desktop/crud-app/src/Components/EditForm.js"],"names":["Form","Button","EmployeeContext","useContext","useState","EditForm","theEmployee","id","user","setUser","name","age","address","gender","about","image","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","updateEmployee","updatedEmployee","handleSubmit","e","preventDefault","setName","target","value","setAge","setAddress","setGender","setAbout"],"mappings":"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","sourcesContent":["import { Form, Button } from \"react-bootstrap\";\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState } from 'react';\n\nconst EditForm = ({ theEmployee }) => {\n\n    const id = theEmployee.id;\n\n    const [user, setUser] = useState({\n        name: \"\",\n        age: \"\",\n        address: \"\",\n        gender: \"\",\n        about: \"\",\n        image: \"\"\n    });\n\n    const { name, age, address, gender, about, image } = user;\n    const convertBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file)\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            }\n            fileReader.onerror = (error) => {\n                reject(error);\n            }\n        })\n    }\n    const { updateEmployee } = useContext(EmployeeContext);\n    const updatedEmployee = { id, name, age, address, gender, about }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateEmployee(id, updatedEmployee)\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                />\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Age *\"\n                    name=\"age\"\n                    value={age}\n                    onChange={(e) => setAge(e.target.value)}\n                    required\n                />\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Address *\"\n                    name=\"address\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    required\n                />\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Gender *\"\n                    name=\"gender\"\n                    value={gender}\n                    onChange={(e) => setGender(e.target.value)}\n                    required\n                />\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"About *\"\n                    name=\"about\"\n                    value={about}\n                    onChange={(e) => setAbout(e.target.value)}\n                    required\n                />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\">Edit Employee</Button>\n        </Form>\n    )\n}\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}