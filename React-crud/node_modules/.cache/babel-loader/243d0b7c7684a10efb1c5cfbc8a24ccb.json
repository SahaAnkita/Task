{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Desktop/crud-app/src/Components/Select.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = () => {\n  _s();\n\n  const [options, setOptions] = useState([\"option 1\", \"option 2\", \"option 3\"]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      children: options.map((element, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Select, \"L2kGl8Pb09vFqIC/VAqQKMRsuG8=\");\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/home/ankita/Desktop/crud-app/src/Components/Select.jsx"],"names":["React","useState","Select","options","setOptions","map","element","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,CAAD,CAAtC;AAEA,sBACI;AAAA,4BACI;AAAQ,MAAA,QAAQ,MAAhB;AAAA,gBACEE,OAAO,CAACE,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,kBAAoB;AAAA,kBAAqBD;AAArB,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cAAhC;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAXD;;GAAML,M;;KAAAA,M;AAYN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Select = () => {\n    const [options, setOptions] = useState([\"option 1\", \"option 2\", \"option 3\"]);\n\n    return (\n        <form>\n            <select multiple>\n            { options.map((element, index) => <option key={index}>{element}</option>) }\n            </select>\n            <button>Add</button>\n        </form>\n    );\n}\nexport default Select;\n\n  \n      \n \n \n  "]},"metadata":{},"sourceType":"module"}