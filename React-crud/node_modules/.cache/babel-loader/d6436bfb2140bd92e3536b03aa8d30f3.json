{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Desktop/crud-app/src/Components/EditForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button } from \"react-bootstrap\";\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = ({\n  theEmployee\n}) => {\n  _s();\n\n  const {\n    updateEmployee\n  } = useContext(EmployeeContext);\n  const id = theEmployee.id;\n  const [name, setName] = useState(theEmployee.name);\n  const [age, setAge] = useState(theEmployee.age);\n  const [address, setAddress] = useState(theEmployee.address);\n  const [gender, setGender] = useState(theEmployee.gender);\n  const [about, setAbout] = useState(theEmployee.about);\n  const updatedEmployee = {\n    name,\n    age,\n    address,\n    gender,\n    about\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateEmployee(id, updatedEmployee);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Name *\",\n        name: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Age *\",\n        name: \"age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Address *\",\n        name: \"address\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Gender *\",\n        name: \"gender\",\n        value: gender,\n        onChange: e => setGender(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"About *\",\n        name: \"about\",\n        value: about,\n        onChange: e => setAbout(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      children: \"Edit Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"PSTOiN15ABk9YqynAaIO0Qnc9G4=\");\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/home/ankita/Desktop/crud-app/src/Components/EditForm.js"],"names":["Form","Button","EmployeeContext","useContext","useState","EditForm","theEmployee","updateEmployee","id","name","setName","age","setAge","address","setAddress","gender","setGender","about","setAbout","updatedEmployee","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { Form, Button } from \"react-bootstrap\";\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState } from 'react';\n\nconst EditForm = ({ theEmployee }) => {\n    const { updateEmployee } = useContext(EmployeeContext);\n    const id = theEmployee.id;\n\n    const [name, setName] = useState(theEmployee.name);\n    const [age, setAge] = useState(theEmployee.age);\n    const [address, setAddress] = useState(theEmployee.address);\n    const [gender, setGender] = useState(theEmployee.gender);\n    const [about, setAbout] = useState(theEmployee.about);\n\n\n    const updatedEmployee = { name, age, address, gender, about }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateEmployee(id, updatedEmployee)\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Age *\"\n                    name=\"age\"\n                    value={age}\n                    onChange={(e) => setAge(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Address *\"\n                    name=\"address\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Gender *\"\n                    name=\"gender\"\n                    value={gender}\n                    onChange={(e) => setGender(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"About *\"\n                    name=\"about\"\n                    value={about}\n                    onChange={(e) => setAbout(e.target.value)}\n                    required\n                />\n            </div>\n            <Button variant=\"success\" type=\"submit\">Edit Employee</Button>\n        </form>\n    )\n}\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}