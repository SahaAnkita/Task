[{"/home/ankita/Desktop/mock-project/src/index.js":"1","/home/ankita/Desktop/mock-project/src/reportWebVitals.js":"2","/home/ankita/Desktop/mock-project/src/App.js":"3","/home/ankita/Desktop/mock-project/src/components/Layout/Navbar.js":"4","/home/ankita/Desktop/mock-project/src/components/pages/NotFound.js":"5","/home/ankita/Desktop/mock-project/src/components/pages/Home.js":"6","/home/ankita/Desktop/mock-project/src/components/users/AddUser.js":"7","/home/ankita/Desktop/mock-project/src/components/users/EditUser.js":"8"},{"size":500,"mtime":1633013176229,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1633013176229,"results":"11","hashOfConfig":"10"},{"size":834,"mtime":1633444885336,"results":"12","hashOfConfig":"10"},{"size":1238,"mtime":1633444860234,"results":"13","hashOfConfig":"10"},{"size":207,"mtime":1633347854212,"results":"14","hashOfConfig":"10"},{"size":2440,"mtime":1633728744219,"results":"15","hashOfConfig":"10"},{"size":3566,"mtime":1633729130867,"results":"16","hashOfConfig":"10"},{"size":3821,"mtime":1633729112975,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"h7ay3h",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ankita/Desktop/mock-project/src/index.js",[],["36","37"],"/home/ankita/Desktop/mock-project/src/reportWebVitals.js",[],"/home/ankita/Desktop/mock-project/src/App.js",[],"/home/ankita/Desktop/mock-project/src/components/Layout/Navbar.js",[],"/home/ankita/Desktop/mock-project/src/components/pages/NotFound.js",[],"/home/ankita/Desktop/mock-project/src/components/pages/Home.js",["38"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n    const [users, setUser] = useState([]);\n\n    useEffect(() => {\n        loadUsers();\n    }, []);\n\n\n    const loadUsers = async () => {\n        const result = await axios.get(\"http://localhost:3002/users\");\n        setUser(result.data.reverse());\n    }\n\n    const deleteUser = async id => {\n        await axios.delete(`http://localhost:3002/users/${id}`);\n        loadUsers();\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"py-4\">\n                <h1 className=\"text-center\">Information</h1>\n                <table className=\"table border shadow\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Age</th>\n                            <th scope=\"col\">Address</th>\n                            <th scope=\"col\">Gender</th>\n                            <th scope=\"col\">About</th>\n                            <th scope=\"col\">Image</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            users.map((user, index) => (\n                                <tr>\n                                    <th scope=\"row\">{index + 1}</th>\n                                    <td>{user.name}</td>\n                                    <td>{user.age}</td>\n                                    <td>{user.address}</td>\n                                    <td>{user.gender}</td>\n                                    <td>{user.about}</td>\n                                    <td><img style={{height: 100, width: 100}} src={user.image} /></td>\n                                    <td>\n                                        <Link className=\"btn btn-primary mr-2\" to={`/users/edit/${user.id}`}>Edit</Link>\n                                        <Link className=\"btn btn-danger\" onClick={() => deleteUser(user.id)}>Delete</Link>\n                                    </td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\nexport default Home;","/home/ankita/Desktop/mock-project/src/components/users/AddUser.js",["39"],"/home/ankita/Desktop/mock-project/src/components/users/EditUser.js",["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":49,"column":41,"nodeType":"48","endLine":49,"endColumn":99},{"ruleId":"49","severity":1,"message":"50","line":17,"column":48,"nodeType":"51","messageId":"52","endLine":17,"endColumn":53},{"ruleId":"49","severity":1,"message":"50","line":17,"column":48,"nodeType":"51","messageId":"52","endLine":17,"endColumn":53},{"ruleId":"53","severity":1,"message":"54","line":38,"column":8,"nodeType":"55","endLine":38,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'image' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [loadUser]",{"range":"62","text":"63"},[1108,1110],"[loadUser]"]