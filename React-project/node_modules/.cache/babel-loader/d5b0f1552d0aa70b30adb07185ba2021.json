{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Desktop/mock-project/src/RegisterYourCatForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['white', 'red', 'blue', 'black', 'cream'];\n\nfunction RegisterYourCatForm() {\n  _s();\n\n  const [values, setValues] = useState({\n    name: '',\n    color: '',\n    age: '',\n    habits: ''\n  });\n\n  const saveFormData = async () => {\n    const response = await fetch('/api/registration', {\n      method: 'POST',\n      body: JSON.stringify(values)\n    });\n\n    if (response.status !== 200) {\n      throw new Error(`Request failed: ${response.status}`);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault(); // Prevent default submission\n\n    try {\n      await saveFormData();\n      alert('Your registration was successfully submitted!');\n      setValues({\n        name: '',\n        color: '',\n        age: '',\n        habits: ''\n      });\n    } catch (e) {\n      alert(`Registration failed! ${e.message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Your Cat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name*:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      value: values.name,\n      onChange: set('name')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Color*:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      required: true,\n      value: values.color,\n      onChange: set('color'),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), COLORS.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: c\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Age*:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      required: true,\n      min: \"1\",\n      value: values.age,\n      onChange: set('age')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Habits:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: values.habits,\n      onChange: set('habits')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterYourCatForm, \"7jJlJfDpQilnHpI6bgTGVnFEZyQ=\");\n\n_c = RegisterYourCatForm;\nexport default RegisterYourCatForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterYourCatForm\");","map":{"version":3,"sources":["/home/ankita/Desktop/mock-project/src/RegisterYourCatForm.js"],"names":["useState","COLORS","RegisterYourCatForm","values","setValues","name","color","age","habits","saveFormData","response","fetch","method","body","JSON","stringify","status","Error","onSubmit","event","preventDefault","alert","e","message","set","map","c"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nconst COLORS = ['white', 'red', 'blue', 'black', 'cream'];\nfunction RegisterYourCatForm() {\n  const [values, setValues] = useState({\n    name: '', color: '', age: '', habits: ''\n  });\n  const saveFormData = async () => {\n    const response = await fetch('/api/registration', {\n      method: 'POST',\n      body: JSON.stringify(values)\n    });\n    if (response.status !== 200) {\n      throw new Error(`Request failed: ${response.status}`); \n    }\n  }\n  const onSubmit = async (event) => {\n    event.preventDefault(); // Prevent default submission\n    try {\n      await saveFormData();\n      alert('Your registration was successfully submitted!');\n      setValues({\n        name: '', color: '', age: '', habits: '' \n      });\n    } catch (e) {\n      alert(`Registration failed! ${e.message}`);\n    }\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <h2>Register Your Cat</h2>\n      <label>Name*:</label>\n      <input\n        type=\"text\" required\n        value={values.name} onChange={set('name')}\n      />\n      <label>Color*:</label>\n      <select\n        required\n        value={values.color} onChange={set('color')}\n      >\n        <option value=\"\">Select color</option>\n        {COLORS.map(c => <option key={c}>{c}</option>)}\n      </select>\n      <label>Age*:</label>\n      <input\n        type=\"number\" required min=\"1\"\n        value={values.age} onChange={set('age')}\n      />\n      <label>Habits:</label>\n      <textarea value={values.habits} onChange={set('habits')} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\nexport default RegisterYourCatForm;\n"]},"metadata":{},"sourceType":"module"}